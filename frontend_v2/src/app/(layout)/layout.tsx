"use client";

import "./globals.css";

import SideBar from "../(layout)/components/Sidebar";
import { FeedProvider } from "./contexts/FeedContext";
import { UserProvider } from "./contexts/UserContext";

// fontAwesome
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css"; // CSS 직접 불러오기
import { useEffect } from "react";
import { ACCESS_TOKEN_NAME } from "./utils/globalValues";
config.autoAddCss = false;

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // 액세스 토큰을 URL에서 쿼리 파라미터로부터 추출하고 로컬 스토리지에 저장
  useEffect(() => {
    const params = new URLSearchParams(window.location.search);
    const token = params.get(ACCESS_TOKEN_NAME);
    if (token) {
      localStorage.setItem(ACCESS_TOKEN_NAME, token);
    }
  }, []);

  return (
    <html lang="en">
      <body>
        {/* <body className={`${geistSans.variable} ${geistMono.variable}`}> */}
        <UserProvider>
          <FeedProvider>
            <SideBar />
            {/* <Header/> */}
            <div className="main-layout">
              <div className="sidebar-space" />
              <div className="main-space">{children}</div>
            </div>
          </FeedProvider>
        </UserProvider>
      </body>
    </html>
  );
}
