networks:
  app_network:
    driver: bridge

services:
  # MariaDB (DB 설정)
  mariadb:
    networks:
      - app_network
    image: mariadb:11.3 # MariaDB 공식 이미지 사용
    container_name: mariadb_container
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # DB root 비밀번호 설정
      MYSQL_DATABASE: ${DB_NAME} # 기본 DB 이름 설정
      MYSQL_USER: ${DB_USERNAME} # DB 사용자 이름 설정
      MYSQL_PASSWORD: ${DB_USER_PASSWORD} # DB 사용자 비밀번호 설정
      MYSQL_TCP_PORT: ${DB_PORT}
      TZ: Asia/Seoul # 시간대 설정 추가
    ports:
      - "3306:3306" # 로컬의 3306 포트를 컨테이너의 3306 포트와 연결
    volumes:
      - mariadb_data:/var/lib/mysql # 데이터를 영속적으로 저장할 볼륨 설정
    healthcheck:
      test:
        [
          "CMD",
          "mariadb-admin",
          "ping",
          "-uroot",
          "-p${DB_ROOT_PASSWORD}",
          "--protocol=tcp",
        ]
      interval: 10s # 10초마다 healthcheck
      timeout: 5s # 5초 동안 대기
      retries: 5 # 최대 5번의 시도
      start_period: 60s # DB가 준비되는 동안 60초 기다리기

  # 백엔드 (Spring Boot)
  backend:
    networks:
      - app_network
    image: 651706767183.dkr.ecr.ap-northeast-2.amazonaws.com/dontgoback:backend-${TAG}
    # build:
    #   context: ./dontgo # 백엔드 코드가 있는 디렉토리 (Dockerfile이 포함된 위치)
    container_name: backend_container
    ports:
      - "8090:8090" # 백엔드의 8080 포트를 노출
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=test # Spring Boot 프로파일 설정
    depends_on:
      mariadb:
        condition: service_healthy
    restart: on-failure # 실패 시 자동 재시작

  # 프론트엔드 (Next.js)
  frontend:
    networks:
      - app_network
    image: 651706767183.dkr.ecr.ap-northeast-2.amazonaws.com/dontgoback:frontend-${TAG}
    # build:
    #   context: ./frontend_v2 # 프론트엔드 코드가 있는 디렉토리 (Dockerfile이 포함된 위치)
    container_name: frontend_container
    ports:
      - "3000:3000" # Next.js의 기본 포트인 3000을 외부에 노출

  # ▶ 필요시에만 실행하는 시더
  seeder:
    image: 651706767183.dkr.ecr.ap-northeast-2.amazonaws.com/dontgoback:backend-${TAG}
    container_name: seeder_container
    networks: [app_network]
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - TZ=Asia/Seoul
      # ▶ 운영 DB에 붙고 시더만 돌도록
      - SPRING_PROFILES_ACTIVE=test, seed
    # 이미지 ENTRYPOINT가 java -jar app.jar 이므로 command 불필요
    restart: "no"
    # 시드만 구동 시, docker compose run --rm seeder

volumes:
  mariadb_data: # MariaDB 데이터를 영속적으로 저장할 볼륨
    driver: local
